'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4952
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4952.
'
Namespace com.infinibiz.accountsws
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="AccountsProServiceSoap", [Namespace]:="http://tempuri.org/AccountsProWS/Service1")>  _
    Partial Public Class AccountsProService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetBOMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetHTMLandLOGOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetHTMLandLogoPaymentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSalesOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://accountsws.infinibiz.com/AccountsProService.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetBOMCompleted As GetBOMCompletedEventHandler
        
        '''<remarks/>
        Public Event SetHTMLandLOGOCompleted As SetHTMLandLOGOCompletedEventHandler
        
        '''<remarks/>
        Public Event SetHTMLandLogoPaymentCompleted As SetHTMLandLogoPaymentCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSalesOrderCompleted As CreateSalesOrderCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountsProWS/Service1/GetBOM", RequestNamespace:="http://tempuri.org/AccountsProWS/Service1", ResponseNamespace:="http://tempuri.org/AccountsProWS/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBOM(ByVal ResellerID As Integer, ByVal PackagesList As String, ByVal OrderID As String) As PackagesListResponse
            Dim results() As Object = Me.Invoke("GetBOM", New Object() {ResellerID, PackagesList, OrderID})
            Return CType(results(0),PackagesListResponse)
        End Function
        
        '''<remarks/>
        Public Function BeginGetBOM(ByVal ResellerID As Integer, ByVal PackagesList As String, ByVal OrderID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetBOM", New Object() {ResellerID, PackagesList, OrderID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetBOM(ByVal asyncResult As System.IAsyncResult) As PackagesListResponse
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),PackagesListResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBOMAsync(ByVal ResellerID As Integer, ByVal PackagesList As String, ByVal OrderID As String)
            Me.GetBOMAsync(ResellerID, PackagesList, OrderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBOMAsync(ByVal ResellerID As Integer, ByVal PackagesList As String, ByVal OrderID As String, ByVal userState As Object)
            If (Me.GetBOMOperationCompleted Is Nothing) Then
                Me.GetBOMOperationCompleted = AddressOf Me.OnGetBOMOperationCompleted
            End If
            Me.InvokeAsync("GetBOM", New Object() {ResellerID, PackagesList, OrderID}, Me.GetBOMOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBOMOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBOMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBOMCompleted(Me, New GetBOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountsProWS/Service1/SetHTMLandLOGO", RequestNamespace:="http://tempuri.org/AccountsProWS/Service1", ResponseNamespace:="http://tempuri.org/AccountsProWS/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetHTMLandLOGO(ByVal html As String, ByVal logo As String, ByVal sid As String, ByVal CustomerId As String) As ClassUser
            Dim results() As Object = Me.Invoke("SetHTMLandLOGO", New Object() {html, logo, sid, CustomerId})
            Return CType(results(0),ClassUser)
        End Function
        
        '''<remarks/>
        Public Function BeginSetHTMLandLOGO(ByVal html As String, ByVal logo As String, ByVal sid As String, ByVal CustomerId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetHTMLandLOGO", New Object() {html, logo, sid, CustomerId}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSetHTMLandLOGO(ByVal asyncResult As System.IAsyncResult) As ClassUser
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ClassUser)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetHTMLandLOGOAsync(ByVal html As String, ByVal logo As String, ByVal sid As String, ByVal CustomerId As String)
            Me.SetHTMLandLOGOAsync(html, logo, sid, CustomerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetHTMLandLOGOAsync(ByVal html As String, ByVal logo As String, ByVal sid As String, ByVal CustomerId As String, ByVal userState As Object)
            If (Me.SetHTMLandLOGOOperationCompleted Is Nothing) Then
                Me.SetHTMLandLOGOOperationCompleted = AddressOf Me.OnSetHTMLandLOGOOperationCompleted
            End If
            Me.InvokeAsync("SetHTMLandLOGO", New Object() {html, logo, sid, CustomerId}, Me.SetHTMLandLOGOOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetHTMLandLOGOOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetHTMLandLOGOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetHTMLandLOGOCompleted(Me, New SetHTMLandLOGOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountsProWS/Service1/SetHTMLandLogoPayment", RequestNamespace:="http://tempuri.org/AccountsProWS/Service1", ResponseNamespace:="http://tempuri.org/AccountsProWS/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetHTMLandLogoPayment(ByVal CustomerId As String, ByVal Paid As Integer) As ClassUser
            Dim results() As Object = Me.Invoke("SetHTMLandLogoPayment", New Object() {CustomerId, Paid})
            Return CType(results(0),ClassUser)
        End Function
        
        '''<remarks/>
        Public Function BeginSetHTMLandLogoPayment(ByVal CustomerId As String, ByVal Paid As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetHTMLandLogoPayment", New Object() {CustomerId, Paid}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSetHTMLandLogoPayment(ByVal asyncResult As System.IAsyncResult) As ClassUser
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ClassUser)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetHTMLandLogoPaymentAsync(ByVal CustomerId As String, ByVal Paid As Integer)
            Me.SetHTMLandLogoPaymentAsync(CustomerId, Paid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetHTMLandLogoPaymentAsync(ByVal CustomerId As String, ByVal Paid As Integer, ByVal userState As Object)
            If (Me.SetHTMLandLogoPaymentOperationCompleted Is Nothing) Then
                Me.SetHTMLandLogoPaymentOperationCompleted = AddressOf Me.OnSetHTMLandLogoPaymentOperationCompleted
            End If
            Me.InvokeAsync("SetHTMLandLogoPayment", New Object() {CustomerId, Paid}, Me.SetHTMLandLogoPaymentOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetHTMLandLogoPaymentOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetHTMLandLogoPaymentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetHTMLandLogoPaymentCompleted(Me, New SetHTMLandLogoPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountsProWS/Service1/CreateSalesOrder", RequestNamespace:="http://tempuri.org/AccountsProWS/Service1", ResponseNamespace:="http://tempuri.org/AccountsProWS/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSalesOrder(ByVal OrderId As String, ByVal trackId As Integer, ByVal MerchantId As String) As Boolean
            Dim results() As Object = Me.Invoke("CreateSalesOrder", New Object() {OrderId, trackId, MerchantId})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateSalesOrder(ByVal OrderId As String, ByVal trackId As Integer, ByVal MerchantId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateSalesOrder", New Object() {OrderId, trackId, MerchantId}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateSalesOrder(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSalesOrderAsync(ByVal OrderId As String, ByVal trackId As Integer, ByVal MerchantId As String)
            Me.CreateSalesOrderAsync(OrderId, trackId, MerchantId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSalesOrderAsync(ByVal OrderId As String, ByVal trackId As Integer, ByVal MerchantId As String, ByVal userState As Object)
            If (Me.CreateSalesOrderOperationCompleted Is Nothing) Then
                Me.CreateSalesOrderOperationCompleted = AddressOf Me.OnCreateSalesOrderOperationCompleted
            End If
            Me.InvokeAsync("CreateSalesOrder", New Object() {OrderId, trackId, MerchantId}, Me.CreateSalesOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSalesOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSalesOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSalesOrderCompleted(Me, New CreateSalesOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/AccountsProWS/Service1")>  _
    Partial Public Class PackagesListResponse
        
        Private packageInfoField() As PackagesBOMList
        
        Private errorCodeField As String
        
        Private errorDescField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property PackageInfo() As PackagesBOMList()
            Get
                Return Me.packageInfoField
            End Get
            Set
                Me.packageInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorCode() As String
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorDesc() As String
            Get
                Return Me.errorDescField
            End Get
            Set
                Me.errorDescField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/AccountsProWS/Service1")>  _
    Partial Public Class PackagesBOMList
        
        Private isPackageField As String
        
        Private packageCodeField As String
        
        Private itemCodeField() As String
        
        '''<remarks/>
        Public Property IsPackage() As String
            Get
                Return Me.isPackageField
            End Get
            Set
                Me.isPackageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageCode() As String
            Get
                Return Me.packageCodeField
            End Get
            Set
                Me.packageCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ItemCode() As String()
            Get
                Return Me.itemCodeField
            End Get
            Set
                Me.itemCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/AccountsProWS/Service1")>  _
    Partial Public Class ClassUser
        
        Private eRRORCODEField As String
        
        Private eRRORDESCField As String
        
        '''<remarks/>
        Public Property ERRORCODE() As String
            Get
                Return Me.eRRORCODEField
            End Get
            Set
                Me.eRRORCODEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ERRORDESC() As String
            Get
                Return Me.eRRORDESCField
            End Get
            Set
                Me.eRRORDESCField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub GetBOMCompletedEventHandler(ByVal sender As Object, ByVal e As GetBOMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBOMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PackagesListResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PackagesListResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub SetHTMLandLOGOCompletedEventHandler(ByVal sender As Object, ByVal e As SetHTMLandLOGOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetHTMLandLOGOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClassUser
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClassUser)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub SetHTMLandLogoPaymentCompletedEventHandler(ByVal sender As Object, ByVal e As SetHTMLandLogoPaymentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetHTMLandLogoPaymentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClassUser
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClassUser)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub CreateSalesOrderCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSalesOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSalesOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
