'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
'
Namespace CXLWEB
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CXLServiceSoap", [Namespace]:="http://tempuri.org/CXL/Service1")>  _
    Public Class CXLService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "https://gateway.infinilogic.com/cxlservices.asmx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CXL/Service1/CXLProcessing", RequestNamespace:="http://tempuri.org/CXL/Service1", ResponseNamespace:="http://tempuri.org/CXL/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function CXLProcessing( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByRef CXLResponseCode As String,  _
                    ByRef CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal cardName As String,  _
                    ByVal callCentre As String) As Object
            Dim results() As Object = Me.Invoke("CXLProcessing", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, cardName, callCentre})
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        Public Function BeginCXLProcessing( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByVal CXLResponseCode As String,  _
                    ByVal CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal cardName As String,  _
                    ByVal callCentre As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CXLProcessing", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, cardName, callCentre}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCXLProcessing(ByVal asyncResult As System.IAsyncResult, ByRef CXLResponseCode As String, ByRef CXLMessage As String) As Object
            Dim results() As Object = Me.EndInvoke(asyncResult)
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="CXLProcessing1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CXL/Service1/CXLProcessingUpgrade", RequestElementName:="CXLProcessingUpgrade", RequestNamespace:="http://tempuri.org/CXL/Service1", ResponseElementName:="CXLProcessingUpgradeResponse", ResponseNamespace:="http://tempuri.org/CXL/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function CXLProcessing( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByRef CXLResponseCode As String,  _
                    ByRef CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal hn As String,  _
                    ByVal zp As String,  _
                    ByVal cardname As String,  _
                    ByVal callCentre As String) As <System.Xml.Serialization.XmlElementAttribute("CXLProcessingUpgradeResult")> Object
            Dim results() As Object = Me.Invoke("CXLProcessing1", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, hn, zp, cardname, callCentre})
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        Public Function BeginCXLProcessing1( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByVal CXLResponseCode As String,  _
                    ByVal CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal hn As String,  _
                    ByVal zp As String,  _
                    ByVal cardname As String,  _
                    ByVal callCentre As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CXLProcessing1", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, hn, zp, cardname, callCentre}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCXLProcessing1(ByVal asyncResult As System.IAsyncResult, ByRef CXLResponseCode As String, ByRef CXLMessage As String) As Object
            Dim results() As Object = Me.EndInvoke(asyncResult)
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="CXLProcessing2"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CXL/Service1/CXLProcessingWithCcv", RequestElementName:="CXLProcessingWithCcv", RequestNamespace:="http://tempuri.org/CXL/Service1", ResponseElementName:="CXLProcessingWithCcvResponse", ResponseNamespace:="http://tempuri.org/CXL/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function CXLProcessing( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByRef CXLResponseCode As String,  _
                    ByRef CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal ccv As String,  _
                    ByVal cardname As String,  _
                    ByVal callCentre As String) As <System.Xml.Serialization.XmlElementAttribute("CXLProcessingWithCcvResult")> Object
            Dim results() As Object = Me.Invoke("CXLProcessing2", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, ccv, cardname, callCentre})
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        Public Function BeginCXLProcessing2( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByVal CXLResponseCode As String,  _
                    ByVal CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal ccv As String,  _
                    ByVal cardname As String,  _
                    ByVal callCentre As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CXLProcessing2", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, ccv, cardname, callCentre}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCXLProcessing2(ByVal asyncResult As System.IAsyncResult, ByRef CXLResponseCode As String, ByRef CXLMessage As String) As Object
            Dim results() As Object = Me.EndInvoke(asyncResult)
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="CXLProcessing3"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CXL/Service1/CXLProcessingWithCcvUpgrade", RequestElementName:="CXLProcessingWithCcvUpgrade", RequestNamespace:="http://tempuri.org/CXL/Service1", ResponseElementName:="CXLProcessingWithCcvUpgradeResponse", ResponseNamespace:="http://tempuri.org/CXL/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function CXLProcessing( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByRef CXLResponseCode As String,  _
                    ByRef CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal ccv As String,  _
                    ByVal hn As String,  _
                    ByVal zp As String,  _
                    ByVal cardname As String,  _
                    ByVal callCentre As String) As <System.Xml.Serialization.XmlElementAttribute("CXLProcessingWithCcvUpgradeResult")> Object
            Dim results() As Object = Me.Invoke("CXLProcessing3", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, ccv, hn, zp, cardname, callCentre})
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        Public Function BeginCXLProcessing3( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByVal CXLResponseCode As String,  _
                    ByVal CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal ccv As String,  _
                    ByVal hn As String,  _
                    ByVal zp As String,  _
                    ByVal cardname As String,  _
                    ByVal callCentre As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CXLProcessing3", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, ccv, hn, zp, cardname, callCentre}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCXLProcessing3(ByVal asyncResult As System.IAsyncResult, ByRef CXLResponseCode As String, ByRef CXLMessage As String) As Object
            Dim results() As Object = Me.EndInvoke(asyncResult)
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CXL/Service1/CxlLiveTest", RequestElementName:="CxlLiveTest", RequestNamespace:="http://tempuri.org/CXL/Service1", ResponseElementName:="CxlLiveTestResponse", ResponseNamespace:="http://tempuri.org/CXL/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IfCXLLive() As <System.Xml.Serialization.XmlElementAttribute("CxlLiveTestResult")> String
            Dim results() As Object = Me.Invoke("IfCXLLive", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginIfCXLLive(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IfCXLLive", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIfCXLLive(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="CXLProcessing4"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CXL/Service1/CXLProcessingWith3dsecure", RequestElementName:="CXLProcessingWith3dsecure", RequestNamespace:="http://tempuri.org/CXL/Service1", ResponseElementName:="CXLProcessingWith3dsecureResponse", ResponseNamespace:="http://tempuri.org/CXL/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function CXLProcessing( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByRef CXLResponseCode As String,  _
                    ByRef CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal ccv As String,  _
                    ByVal eci As String,  _
                    ByVal sid As String,  _
                    ByVal vts As String,  _
                    ByVal vav As String,  _
                    ByVal threeid As String,  _
                    ByVal hn As String,  _
                    ByVal zp As String,  _
                    ByVal cardname As String) As <System.Xml.Serialization.XmlElementAttribute("CXLProcessingWith3dsecureResult")> Object
            Dim results() As Object = Me.Invoke("CXLProcessing4", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, ccv, eci, sid, vts, vav, threeid, hn, zp, cardname})
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        Public Function BeginCXLProcessing4( _
                    ByVal CreditCardNO As String,  _
                    ByVal IssueNumber As String,  _
                    ByVal TransactionAmount As String,  _
                    ByVal GCode As String,  _
                    ByVal MerchantId As String,  _
                    ByVal CID As String,  _
                    ByVal OrderID As String,  _
                    ByVal TransactionType As String,  _
                    ByVal StartDate As String,  _
                    ByVal CardExpiry As String,  _
                    ByVal CardType As String,  _
                    ByVal Mode As String,  _
                    ByVal CXLResponseCode As String,  _
                    ByVal CXLMessage As String,  _
                    ByVal agentName As String,  _
                    ByVal agentAcquirer As String,  _
                    ByVal rid As Long,  _
                    ByVal merchantloginid As String,  _
                    ByVal customerloginid As String,  _
                    ByVal sender As String,  _
                    ByVal ccv As String,  _
                    ByVal eci As String,  _
                    ByVal sid As String,  _
                    ByVal vts As String,  _
                    ByVal vav As String,  _
                    ByVal threeid As String,  _
                    ByVal hn As String,  _
                    ByVal zp As String,  _
                    ByVal cardname As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CXLProcessing4", New Object() {CreditCardNO, IssueNumber, TransactionAmount, GCode, MerchantId, CID, OrderID, TransactionType, StartDate, CardExpiry, CardType, Mode, CXLResponseCode, CXLMessage, agentName, agentAcquirer, rid, merchantloginid, customerloginid, sender, ccv, eci, sid, vts, vav, threeid, hn, zp, cardname}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCXLProcessing4(ByVal asyncResult As System.IAsyncResult, ByRef CXLResponseCode As String, ByRef CXLMessage As String) As Object
            Dim results() As Object = Me.EndInvoke(asyncResult)
            CXLResponseCode = CType(results(1),String)
            CXLMessage = CType(results(2),String)
            Return CType(results(0),Object)
        End Function
    End Class
End Namespace
